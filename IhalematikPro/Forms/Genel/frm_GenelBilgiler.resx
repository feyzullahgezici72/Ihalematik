<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>Mal : Satın alınan her türlü ihtiyaç maddeleri ile taşınır ve taşınmaz mal ve hakları,

Hizmet : Bakım ve onarım, taşıma, haberleşme, sigorta, araştırma ve geliştirme, muhasebe, piyasa araştırması ve anket, danışmanlık, tanıtım, basım ve yayım, temizlik, yemek hazırlama ve dağıtım, toplantı, organizasyon, sergileme, koruma ve güvenlik, meslekî eğitim, fotoğraf, film, fikrî ve güzel sanat, bilgisayar sistemlerine yönelik hizmetler ile yazılım hizmetlerini, taşınır ve taşınmaz mal ve hakların kiralanmasını ve benzeri diğer hizmetleri,

Yapım : Bina, karayolu, demiryolu, otoyol, havalimanı, rıhtım, liman, tersane, köprü, tünel, metro, viyadük, spor tesisi, alt yapı, boru iletim hattı, haberleşme ve enerji nakil hattı, baraj, enerji santrali, rafineri tesisi, sulama tesisi, toprak ıslahı, taşkın koruma ve dekapaj gibi her türlü inşaat  işleri ve bu işlerle ilgili tesisat, imalat, ihzarat, nakliye, tamamlama, büyük onarım, restorasyon, çevre düzenlemesi, sondaj, yıkma, güçlendirme ve montaj işleri ile benzeri yapım işlerini,

Tedarikçi : Mal alımı ihalesine teklif veren gerçek veya tüzel kişileri veya bunların oluşturdukları ortak girişimleri,

Hizmet sunucusu : Hizmet alımı ihalesine teklif veren gerçek veya tüzel kişileri veya bunların oluşturdukları ortak girişimleri,

Danışman : Danışmanlık yapan, bilgi ve deneyimini idarenin yararı için kullanan, danışmanlığını yaptığı işin yüklenicileri ile hiçbir organik bağ içinde bulunmayan, idareden danışmanlık hizmeti karşılığı dışında hiçbir kazanç sağlamayan ve danışmanlık hizmetlerini veren hizmet sunucularını,

Yapım müteahhidi : Yapım işi ihalesine teklif veren gerçek veya tüzel kişileri veya bunların oluşturdukları ortak girişimleri,

Aday: Ön yeterlik için başvuran gerçek veya tüzel kişileri veya bunların oluşturdukları ortak girişimleri,

Ortak girişim : İhaleye katılmak üzere birden fazla gerçek veya tüzel kişinin aralarında yaptıkları anlaşma ile oluşturulan iş ortaklığı veya konsorsiyumları,

İstekli : Mal veya hizmet alımları ile yapım işlerinin ihalesine teklif veren tedarikçi, hizmet sunucusu veya yapım müteahhidini,

İstekli olabilecek :İhale konusu alanda faaliyet gösteren ve ihale veya ön yeterlik dokümanı satın almış gerçek veya tüzel kişiyi ya da bunların oluşturdukları ortak girişimi,

Yerli istekli : (Değişik: 30/7/2003-4964/3 md.) Türkiye Cumhuriyeti vatandaşı gerçek kişiler ile Türkiye Cumhuriyeti kanunlarına göre kurulmuş tüzel kişilikleri,

Yüklenici : Üzerine ihale yapılan ve sözleşme imzalanan istekliyi,

İdare : İhaleyi yapan bu Kanun kapsamındaki kurum ve kuruluşları,

İhale yetkilisi : İdarenin, ihale ve harcama yapma yetki ve sorumluluğuna sahip kişi veya kurulları ile usulüne uygun olarak yetki devri yapılmış görevlilerini,

Başvuru belgesi : Belli istekliler arasında ihale usulünde ön yeterliğe katılan aday tarafından  yeterliğinin tespitinde kullanılmak üzere sunulan belgeleri,

İhale dokümanı : İhale konusu mal veya hizmet alımları ile yapım işlerinde; isteklilere talimatları da içeren idari şartnameler ile yaptırılacak işin projesini de kapsayan teknik şartnameler, sözleşme tasarısı ve gerekli diğer belge ve bilgileri,

Ön proje : Belli bir yapının kesin ihtiyaç programına göre; gerekli arazi ve zemin araştırmaları yapılmadan, bilgilerin halihazır haritalardan alındığı, çevresel etki değerlendirme ve fizibilite raporları dahil elde edilen verilere dayanılarak hazırlanan plân, kesit, görünüş ve profillerin belirtildiği bir veya birkaç çözümü içeren projeyi,

Kesin proje : Belli bir yapının onaylanmış ön projesine göre; mümkün olan arazi ve zemin araştırmaları yapılmış olan, yapı elemanlarının ölçülendirilip boyutlandırıldığı, inşaat sistem ve gereçleri ile teknik özelliklerinin  belirtildiği projeyi,

Uygulama projesi : Belli bir yapının onaylanmış kesin projesine göre yapının her türlü ayrıntısının belirtildiği projeyi,

İhale : Bu Kanunda yazılı usul ve şartlarla mal veya hizmet alımları ile yapım işlerinin istekliler arasından seçilecek birisi üzerine bırakıldığını gösteren ve ihale yetkilisinin onayını müteakip sözleşmenin imzalanması ile tamamlanan işlemleri,

Teklif : Bu Kanuna göre yapılacak ihalelerde isteklinin idareye sunduğu fiyat teklifi ile değerlendirmeye esas belge ve/veya bilgileri,

Açık ihale usulü : Bütün isteklilerin teklif verebildiği usulü,

Belli istekliler arasında ihale usulü : Ön yeterlik değerlendirmesi sonucunda idare tarafından davet edilen isteklilerin teklif verebildiği usulü,

Pazarlık usulü : Bu Kanunda belirtilen hallerde kullanılabilen, ihale sürecinin iki aşamalı olarak gerçekleştirildiği ve idarenin ihale konusu işin teknik detayları ile gerçekleştirme yöntemlerini ve belli hallerde fiyatı isteklilerle görüştüğü usulü,

Doğrudan temin : Bu Kanunda belirtilen hallerde ihtiyaçların, idare tarafından davet edilen isteklilerle teknik şartların ve fiyatın görüşülerek doğrudan temin edilebildiği usulü,

Sözleşme : Mal veya hizmet alımları ile yapım işlerinde idare ile yüklenici arasında yapılan yazılı  anlaşmayı,

Kurum : Kamu İhale Kurumunu,

Kurul : Kamu İhale Kurulunu,

Ön ilan : (Ek: 20/11/2008-5812/2 md.) Yıl içerisinde ihale edilmesi planlanmış işlere ilişkin olarak, mali yılın başlangıcını izleyen mümkün olan en kısa sürede yapılan duyuruyu,

Elektronik Kamu Alımları Platformu : (Ek: 20/11/2008-5812/2 md.) İdareler ile kamu alımları sürecine taraf olanların bu sürece ilişkin işlemleri internet üzerinden gerçekleştirebilecekleri ve Kurum tarafından yönetilen elektronik ortamı,

Dinamik alım sistemi : (Ek: 20/11/2008-5812/2 md.) İhale dokümanına uygun ön teklif veren ve sistemin geçerlik süresi içerisinde yeterlik kriterlerini sağlayan bütün isteklilerin sisteme kabul edildiği, piyasada mamul olarak bulunan malların tedarikine yönelik tamamen elektronik ortamda gerçekleştirilen alım sürecini,

Elektronik eksiltme : Tekliflerin değerlendirilmesinin ardından elektronik ortamda eksiltme şeklinde sunulan yeni fiyatların veya belirli teklif unsurlarına ilişkin yeni değerlerin bir elektronik araç marifetiyle otomatik değerlendirme metotları kullanılarak yeniden değerlendirilmesi ve sıralandırılması şeklinde tekrar eden işlemleri,

Çerçeve anlaşma : Bir veya birden fazla idare ile bir veya birden fazla istekli arasında, belirli bir zaman aralığında gerçekleştirilecek alımların özellikle fiyat ve mümkün olan hallerde öngörülen miktarlarının tespitine ilişkin şartları belirleyen anlaşmayı,

İfade eder.</value>
  </data>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>EKAP(Elektronik kamu Alımları Platformu) KİK tarafından  ihale işlemlerinin daha şeffaf olarak gerçekleşmesi, kırtasiye giderlerinin azaltılması amacıyla devreye alınmıştır. İstisna kapsamındaki ihalelere ve kapsam dışı ihalelere ilişkin dokümanlar EKAP üzerinden hazırlanmayacaktır. Doküman hazırlama işlemleri tamamlanmış ihalelere ilişkin Kamu İhale Bülteninde yayımlanacak ilanlar EKAP tarafından otomatik olarak oluşturulacaktır. İhale takibi, ihale sonuç ilanı ve zeyilnameler, yasaklılık sorgulaması da EKAP üzerinden yapılacaktır.

EKAP S1.0’da istekliler için ana süreçlerdeki en önemli değişiklik isteklilerin ihale dokümanını görmek için idareye gitmelerine gerek olmamasıdır. İstekliler vatandaş ekranından EKAP’a kayıt olmadan EKAP üzerinden ihale dokümanına ve ilanlara erişebilirler.

Bazı idarelerin, ihalelerine katılmak isteyen firmaları EKAP'ta kayıtlarının olmaması halinde ihalelerine katılmalarının mümkün olamayacağı yönünde tereddüde düşürdüğü anlaşılmıştır. Gerçek veya tüzel kişilerin ihale dokümanını eskiden olduğu gibi idareden satın alabilmeleri, kağıt bazlı tekliflerini zarf içinde ilgili idareye verebilmeleri ve ihaleyi kazanmaları halinde haklarında idarelerce EKAP'tan teyit alınabilmesi için EKAP'a kayıt olmaları zorunlu değildir.

İhalelere katılmak isteyen gerçek veya tüzel kişiler, EKAP’ta oluşturulan ihalelere ilişkin belirlenen kriterlere göre arama yapabilecek ve arama sonucunda istedikleri ihalenin detaylı bilgilerine erişebilecektir. İhale ilanı yayımlanan ihalelerin ilanlarına da bu sayfadan erişilebilecektir.İhale dokümanı, bedel ödenmeksizin EKAP üzerinden indirilebilecektir. Bununla birlikte dokümanın bu şekilde indirilmesi, indirene istekli olabilecek sıfatını kazandırmayacaktır.</value>
  </data>
  <metadata name="dockManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>